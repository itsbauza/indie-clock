generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model User {
  id                  String            @id @default(cuid())
  name                String?
  email               String?           @unique
  emailVerified       DateTime?
  image               String?
  githubId            String?           @unique
  username            String?           @unique
  tokenExpiresAt      DateTime?
  rabbitmqUsername    String?           @unique
  rabbitmqPassword    String?
  createdAt           DateTime          @default(now())
  updatedAt           DateTime          @updatedAt
  patUpdatedAt        DateTime?
  personalAccessToken String?
  accounts            Account[]
  rabbitmqMessages    RabbitMQMessage[]
  devices             Device[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

model RabbitMQMessage {
  id      String   @id @default(cuid())
  userId  String
  topic   String
  message Json
  sentAt  DateTime @default(now())
  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("rabbitmq_messages")
}

model Device {
  id               String   @id @default(cuid())
  userId           String
  name             String?
  rabbitmqUsername String   @unique
  rabbitmqPassword String
  topicPrefix      String
  createdAt        DateTime @default(now())
  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("devices")
}
